# Author: Jonathan Siegel
#
# A simple python script for plotting the functions generated by the main C++ program.

import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

with open("res_norm.csv") as file_name:
  array = np.loadtxt(file_name, delimiter=",")
  plt.loglog(array[:,0], array[:,1], marker='o', linestyle='None', markersize=3.0)
  plt.xlabel('iteration')
  plt.ylabel('residual norm')
  # Perform a least squares linear fit. We remove the residual error for the first 10 iterations,
  # since they have an outsize impact on the estimated convergence rate.
  k, m = np.polyfit(np.log(array[10:,0]), np.log(array[10:,1]), 1)
  x = np.linspace(1, 100, 100)
  y = np.exp(m)*x**k
  plt.plot(x,y, label="y ~ x^(%1.3f)" %k)
  plt.legend(loc="upper right")
  plt.show()

with open("original_function.csv") as file_name:
  array = np.loadtxt(file_name, delimiter=",")
  fig = plt.figure()
  ax = fig.add_subplot(projection='3d')

  ax.scatter(array[:,0], array[:,1], array[:,2], c=array[:,2], cmap='viridis')

  ax.set_xlabel('x')
  ax.set_ylabel('y')
  ax.set_zlabel('z')

  plt.show()

with open("function_one.csv") as file_name:
  array = np.loadtxt(file_name, delimiter=",")
  fig = plt.figure()
  ax = fig.add_subplot(projection='3d')

  ax.scatter(array[:,0], array[:,1], array[:,2], c=array[:,2], cmap='viridis')

  ax.set_xlabel('x')
  ax.set_ylabel('y')
  ax.set_zlabel('z')

  plt.show()

with open("function_two.csv") as file_name:
  array = np.loadtxt(file_name, delimiter=",")
  fig = plt.figure()
  ax = fig.add_subplot(projection='3d')

  ax.scatter(array[:,0], array[:,1], array[:,2], c=array[:,2], cmap='viridis')

  ax.set_xlabel('x')
  ax.set_ylabel('y')
  ax.set_zlabel('z')

  plt.show()

with open("function_three.csv") as file_name:
  array = np.loadtxt(file_name, delimiter=",")
  fig = plt.figure()
  ax = fig.add_subplot(projection='3d')

  ax.scatter(array[:,0], array[:,1], array[:,2], c=array[:,2], cmap='viridis')

  ax.set_xlabel('x')
  ax.set_ylabel('y')
  ax.set_zlabel('z')

  plt.show()

